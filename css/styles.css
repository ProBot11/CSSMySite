h1{
  /* margin-top: 0; */
  font-family: 'Sacramento', cursive;
  font-size: 5.625rem;
  margin: 30px auto 0px auto;
  /* padding-top: 130px; */
  color: #66BFBF;
  line-height: 2;
}
/*
recommended to use % so that it fits along with the device, 100% is 16px, so 90px will be (90/16)*100 = 562.5%
another unit is em, 16px = 100% = 1em
em and % are affected by the size mentioned in parent and it adds it up to its current size, to remove this, recommended to use rem
this is root em and won't be affected by anything
 */
h2{
  font-family: 'Montserrat', sans-serif;
  font-size: 2rem;
  margin: 0px;
  color: #66BFBF;
}
h3{
  font-family: 'Montserrat', sans-serif;
  color: #11999E;
    font-weight: normal;
}
hr{
  border-style: none;
  border-top-style: dotted;
  color: #EAF6F6;
  border-width: 5px;
  width: 4%;
  margin: 100px auto 100px auto;
}
body{
  margin: 0px;
  text-align: center;
  font-family: 'Montserrat', sans-serif;
  font-size: 2rem;
  color: #40514E;
}
/* p{
  font-family: 'Montserrat', sans-serif;
  font-size: 1rem;
  line-height: 2;
} */
.first-container{
  background: black;
  position: relative;
  padding-top: 145px;
}
.second-container{
  /* background: black; */
  margin: 0;
  font-size: 1rem;
  line-height: 2;
}
.third-container{
  margin: 0;
  padding-bottom: 20px;
  background-color: black;
  padding-top: 40px;
  margin-top: 30px;
}
.pro{
  text-decoration: underline;
}
.top-cloud{
  position: absolute;
  right: 300px;
  top: 50px;
}
.bottom-cloud{
  position: absolute;
  left: 300px;
  top : 400px;
}
a{
  color: #11999E;
  font-size: 1rem;
  text-decoration: none;
  margin: 50px 20px 50px 20px;
}
.footer-link:hover{
  text-decoration: underline;
}
.edits{
  font-weight: normal;
}
.skill-row{
  width: 50%;
  margin: 80px auto 200px auto;
  text-align: left;
}
.skills{
  margin-top: 175px;
  margin-bottom: 100px;
}
.comps{
  width: 25%;
  float: left;
  margin-right: 30px;
  margin-bottom: 30px;
}
.footie{
  width: 25%;
  height: 25%;
  float: right;
  margin-left: 30px;
}
.paracheck1{
  font-size: 0.75rem;
  color: #EAF6F6;
  padding-top: 50px;
}
.contact-me{
  width: 35%;
  margin: 100px auto 100px auto;
}
.profile{
  margin: 50px auto 50px auto;
  width: 40%;
}
.btn {
   background: #66BFBF;
   background-image: -webkit-linear-gradient(top, #66BFBF, #66BFBF);
   background-image: -moz-linear-gradient(top, #66BFBF, #66BFBF);
   background-image: -ms-linear-gradient(top, #66BFBF, #66BFBF);
   background-image: -o-linear-gradient(top, #66BFBF, #66BFBF);
   background-image: -webkit-gradient(to bottom, #66BFBF, #66BFBF);
   -webkit-border-radius: 9px;
   -moz-border-radius: 9px;
   border-radius: 9px;
   color: #FFFFFF;
   font-family: Helvetica;
   font-size: 14px;
   font-weight: 100;
   padding: 10px;
   text-decoration: none;
   display: inline-block;
   cursor: pointer;
   text-align: center;
}

.btn:hover {
   border: solid #66BFBF 0;
   background: #66BFBF;
   background-image: -webkit-linear-gradient(top, #66BFBF, #66BFBF);
   background-image: -moz-linear-gradient(top, #66BFBF, #66BFBF);
   background-image: -ms-linear-gradient(top, #66BFBF, #66BFBF);
   background-image: -o-linear-gradient(top, #66BFBF, #66BFBF);
   background-image: -webkit-gradient(to bottom, #66BFBF, #66BFBF);
   -webkit-border-radius: 20px;
   -moz-border-radius: 20px;
   border-radius: 20px;
   text-decoration: underline;
}
.tags{
  color: #11999E;
  font-size: 1rem;
  text-decoration: none;
  margin: 0;
}
/*
display property shows how the box of an element on the webpage will be located
4 types
display: block;
block means that the element will take the whole width for itself, it will block other elements from joining it's width, examples are
p, h1 - h6, div, ol, ul, li, forms

display: inline;
inline only takes up as much space as it needs, we can have multiple inlines in a line, examples are
img, a, span
in inline, we cannot change the width

display: inline-block;
in this, we have the same line property of inline and the width change changing property of block, examples are
img

display: none;
this will just make the element disappear, we could also use visibility: hidden; to do the same but it maintains the same position
*/


/*
position property is used to position elements on the screen
position: static;
all html elements are static by default, it means go along with the basic HTML rules

position: relative;
relative is relative to itself, and it works like margins, however, in this, other elements are not affected and will in fact get overlapped

position: absolute;
absolute is relative to the parent, if it says right: 20px, it means 20px right from the parent

position: fixed;
fixed means that the element will stay fixed while scrolling around the screen

/*
coordinate property is used to give coordinates to any element on the screen
top: 20px
bottom: 20px
left: 20px
right: 20px

 */


/*
text-align will center anything that does not have width, if something has width and is a block, we need to use auto margin */

/*
float will just make the element float in whatever side we tell it to, clear just clears off whichever side it is told to and will move itself accordingly
 */
